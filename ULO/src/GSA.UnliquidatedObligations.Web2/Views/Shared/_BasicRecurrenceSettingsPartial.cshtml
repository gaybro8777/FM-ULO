@using static GSA.UnliquidatedObligations.Web.Models.RecurrenceSettings
@model RecurrenceSettings
@{
    bool showDuration = false;
    if (ViewData["RecurrenceSettingsShowDuration"] is bool)
    {
        showDuration = (bool)ViewData["RecurrenceSettingsShowDuration"];
    }
    var patternType = @Model.PatternType;
}

<div class="form-row">
    <label>Recurrence Pattern</label>
    <input type="radio" class="radio-inline" id="PatternTypeHourly" name="RecurrenceSettings.PatternType" value="Hourly" @(Model.PatternType == RecurrenceSettings.PatternTypes.Hourly ? "checked='checked'" : "") />
    <span>Hourly</span>
    <input type="radio" class="radio-inline" id="PatternTypeDaily" name="RecurrenceSettings.PatternType" value="Daily" @(Model.PatternType == RecurrenceSettings.PatternTypes.Daily ? "checked='checked'" : "") />
    <span>Daily</span>
    <input type="radio" class="radio-inline" id="PatternTypeWeekly" name="RecurrenceSettings.PatternType" value="Weekly" @(Model.PatternType == RecurrenceSettings.PatternTypes.Weekly ? "checked='checked'" : "") />
    <span>Weekly</span>
</div>
<div class="form-row">
    <label>Recurrence Detail</label>
    <div class="inline-form pattern-section" id="pattern-section-hourly" style="@(Model.PatternType == RecurrenceSettings.PatternTypes.Hourly ? "" : "display:none")">
        <div>
            <span>Every </span>
            <input asp-for="HourlyPattern.EveryNHours" class="form-control inline-block" type="number" /> Hours
            <span asp-validation-for="HourlyPattern.EveryNHours" class="text-danger"></span>
        </div>
    </div>
    <div class="inline-form pattern-section" id="pattern-section-daily" style="@(Model.PatternType == RecurrenceSettings.PatternTypes.Daily ? "" : "display:none")">
        <div>
            @Html.RadioButtonFor(m => m.DailyPattern.EveryWeekday, "false", new { name = "dailyPatternType" })
            <span>Every </span>
            <input asp-for="DailyPattern.EveryNDays" class="form-control inline-block" type="number" /> Days
            <span asp-validation-for="DailyPattern.EveryNDays" class="text-danger"></span>
        </div>
        <br />
        <div>
            @Html.RadioButtonFor(m => m.DailyPattern.EveryWeekday, "true", new { name = "dailyPatternType" })
            <span>Every Weekday</span>
        </div>
    </div>
    <div class="inline-form pattern-section" id="pattern-section-weekly" style="@(Model.PatternType == RecurrenceSettings.PatternTypes.Weekly ? "" : "display:none")">
        <div>
            <input asp-for="WeeklyPattern.Sunday" />
            <label asp-for="WeeklyPattern.Sunday"></label>
        </div>
        <div>
            <input asp-for="WeeklyPattern.Monday" />
            <label asp-for="WeeklyPattern.Monday"></label>
        </div>
        <div>
            <input asp-for="WeeklyPattern.Tuesday" />
            <label asp-for="WeeklyPattern.Tuesday"></label>
        </div>
        <div>
            <input asp-for="WeeklyPattern.Wednesday" />
            <label asp-for="WeeklyPattern.Wednesday"></label>
        </div>
        <div>
            <input asp-for="WeeklyPattern.Thursday" />
            <label asp-for="WeeklyPattern.Thursday"></label>
        </div>
        <div>
            <input asp-for="WeeklyPattern.Friday" />
            <label asp-for="WeeklyPattern.Friday"></label>
        </div>
        <div>
            <input asp-for="WeeklyPattern.Saturday" />
            <label asp-for="WeeklyPattern.Saturday"></label>
        </div>
    </div>
</div>

<div class="form-row" id="start-time" style="display:none">
    <label>Start Time</label>
    <input asp-for="StartTimeUtc" class="form-control" type="time" />
    <span asp-validation-for="StartTimeUtc" class="text-danger"></span>
</div>


@Html.Script(@<script type="text/javascript">
    $(document).ready(function () {
        function setStartTime(chosenPattern) {
            chosenPattern = chosenPattern.toLowerCase();
            if (chosenPattern === 'hourly') {
                $("#start-time").hide();
            }

            if (chosenPattern !== 'hourly') {
                $("#start-time").show();
            }
        }

        setStartTime('@Model.PatternType');

        $("input[name='RecurrenceSettings.PatternType']").change(function () {
            $(".pattern-section").hide();
            var chosenPattern = $(this).attr("value").toLowerCase();
            var sel = "#pattern-section-" + chosenPattern;
            $(sel).show();

            setStartTime(chosenPattern);
        });

        $("input[name='endAfterType']").change(function () {
            $(".end-after-value-section>input").attr("disabled", "disabled");
            $(this).parent().children("input").removeAttr("disabled");
        });

        $("#all-day-input").change(function () {
            var isAllDay = $(this).attr("checked") == "checked";
            if (isAllDay) {
                $("#duration-input").removeAttr("disabled");
            }
            else {
                $("#duration-input").attr("disabled", "disabled");
            }
        });

        $("input[name='dailyPatternType']").change(function () {
            $("[name='dailyPatternType']").parent().children("input[name<>'dailyPatternType']").attr("disabled", "disabled");
            $(this).parent().children("input").removeAttr("disabled");
        });
    });
</script>)