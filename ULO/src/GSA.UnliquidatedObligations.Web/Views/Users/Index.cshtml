@using GSA.UnliquidatedObligations.BusinessLayer.Authorization
@using GSA.UnliquidatedObligations.Web.Controllers
@using GSA.UnliquidatedObligations.Web.Models;
@using GSA.UnliquidatedObligations.Web;
@using RevolutionaryStuff.Core;
@model IEnumerable<UserModel>
@{
    this.SetTitles(PageKeys.ManageUsers, "Manage Users");
    Layout = "~/Views/Shared/_Layout.cshtml";
    var canMakeChanges = User.HasPermission(ApplicationPermissionNames.ManageUsers);
}

@using (Html.BeginForm(UsersController.ActionNames.Index, UsersController.Name, FormMethod.Get))
{
    <input type="text" name="q" value="@Context.Request["q"]" />
    <button id="filterWorkflows" class="btn btn-primary">
        Search
    </button>
    if (canMakeChanges)
    {
        <input type="button" value="Create" class="btn btn-primary" onclick="location.href='@Url.Action(UsersController.ActionNames.Create)'" />
    }
}

<table class="table table-responsive users-data">
    <tr>
        <th>@Html.SortableHeaderFor(z => z.UserName, overrideDisplayName: "User Name")</th>
        <th>@Html.SortableHeaderFor(z => z.Email, overrideDisplayName: "Email")</th>
        <th>@Html.SortableHeaderFor(z => z.UserType, overrideDisplayName: "User Type")</th>
        <th>Claims</th>
        <th>Permissions</th>
        <th>Groups</th>
        <th></th>
    </tr>
    @foreach (var user in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => user.UserName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => user.Email)
            </td>
            <td>
                @Html.DisplayFor(modelItem => user.UserType)
            </td>
            <td>
                <ul>
                    @{
                        foreach (var claim in user.Claims)
                        {
                            var c = claim;
                            if (!RegexHelpers.Common.Whitespace.IsMatch(c))
                            {
                                c = StringHelpers.ToTitleFriendlyString(c);
                            }
                            <li>@c</li>
                        }
                    }
                </ul>
            </td>
            <td>
                <ul>
                    @{
                        foreach (var claim in user.Permissions)
                        {
                            var c = claim;
                            if (!RegexHelpers.Common.Whitespace.IsMatch(c))
                            {
                                c = StringHelpers.ToTitleFriendlyString(c);
                            }
                            <li>@c</li>
                        }
                    }
                </ul>
            </td>
            <td>
                <ul>
                    @{
                        foreach (var claim in user.Groups)
                        {
                            <li>@claim</li>
                        }
                    }
                </ul>
            </td>
            <td>
                @Html.ActionLink("Details", "Details", new { userName = user.UserName })
            </td>
        </tr>
    }
</table>

@Html.Partial("_PaginationPartial")
